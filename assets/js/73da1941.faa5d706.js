"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[4670],{65866:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=n(85893),r=n(11151);const o={},a="Creating App Ids",i={id:"front-end/creating-app-ids/README",title:"Creating App Ids",description:"AppData is field is a bytes32 data include in all the orders//github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2Order.sol#L18",source:"@site/docs/front-end/creating-app-ids/README.md",sourceDirName:"front-end/creating-app-ids",slug:"/front-end/creating-app-ids/",permalink:"/docs-v2/docs/front-end/creating-app-ids/",draft:!1,unlisted:!1,editUrl:"https://github.com/cowprotocol/docs/tree/main/docs/front-end/creating-app-ids/README.md",tags:[],version:"current",frontMatter:{}},c={},d=[];function p(t){const e=Object.assign({h1:"h1",p:"p",a:"a",strong:"strong"},(0,r.ah)(),t.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"creating-app-ids",children:"Creating App Ids"}),"\n",(0,s.jsxs)(e.p,{children:["AppData is field is a bytes32 data include in all the orders: ",(0,s.jsx)(e.a,{href:"https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2Order.sol#L18",children:(0,s.jsx)(e.strong,{children:"https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2Order.sol#L18"})})]}),"\n",(0,s.jsx)(e.p,{children:"The AppData can be empty, if you don't want to include any metadata, or can contain an IPFS hash otherwise."}),"\n",(0,s.jsxs)(e.p,{children:["The clients/UIs would be responsible for uploading the metadata to IPFS, and include the 32 bytes of the ",(0,s.jsx)(e.a,{href:"https://docs.ipfs.io/concepts/hashing/",children:"IPFS hash"})," in the order."]})]})}const l=function(t={}){const{wrapper:e}=Object.assign({},(0,r.ah)(),t.components);return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(p,t)})):p(t)}},11151:(t,e,n)=>{n.d(e,{Zo:()=>i,ah:()=>o});var s=n(67294);const r=s.createContext({});function o(t){const e=s.useContext(r);return s.useMemo((()=>"function"==typeof t?t(e):{...e,...t}),[e,t])}const a={};function i({components:t,children:e,disableParentContext:n}){let i;return i=n?"function"==typeof t?t({}):t||a:o(t),s.createElement(r.Provider,{value:i},e)}}}]);