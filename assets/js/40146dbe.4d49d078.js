"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[2183],{50490:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=r(85893),o=r(11151);const s={},c="Order Execution",a={id:"smart-contracts/eth-flow-contract/order-execution",title:"Order Execution",description:"After a user order is created, then the corresponding eth-flow contract order will be traded in CoW Swap.",source:"@site/docs/smart-contracts/eth-flow-contract/order-execution.md",sourceDirName:"smart-contracts/eth-flow-contract",slug:"/smart-contracts/eth-flow-contract/order-execution",permalink:"/docs-v2/docs/smart-contracts/eth-flow-contract/order-execution",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/eth-flow-contract/order-execution.md",tags:[],version:"current",frontMatter:{}},i={},d=[];function l(e){const t=Object.assign({h1:"h1",p:"p",ol:"ol",li:"li",a:"a"},(0,o.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"order-execution",children:"Order Execution"}),"\n",(0,n.jsx)(t.p,{children:"After a user order is created, then the corresponding eth-flow contract order will be traded in CoW Swap."}),"\n",(0,n.jsx)(t.p,{children:"The contract order uses EIP-1271 signatures."}),"\n",(0,n.jsx)(t.p,{children:"The signature can be empty, since all information needed to verify the order can be found onchain."}),"\n",(0,n.jsx)(t.p,{children:"Signature verification in a settlement works as follows:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["The order digest is computed as part of the settlement process and is the message that is assumed to be EIP-1271-signed by the eth-flow contract. The digest is used to retrieve the owner and the validity from the ",(0,n.jsx)(t.a,{href:"/docs-v2/docs/smart-contracts/eth-flow-contract/orders-in-storage",children:"order mapping"}),". "]}),"\n",(0,n.jsx)(t.li,{children:"The order validity is checked against the current timestamp."}),"\n",(0,n.jsx)(t.li,{children:"The owner must be valid (should be set and not invalidated)."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"If all verification steps succeed, the order can be traded."}),"\n",(0,n.jsx)(t.p,{children:"\\"})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},11151:(e,t,r)=>{r.d(t,{Zo:()=>a,ah:()=>s});var n=r(67294);const o=n.createContext({});function s(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const c={};function a({components:e,children:t,disableParentContext:r}){let a;return a=r?"function"==typeof e?e({}):e||c:s(e),n.createElement(o.Provider,{value:a},t)}}}]);