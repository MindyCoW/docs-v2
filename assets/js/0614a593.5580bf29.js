"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[3291],{81860:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=o(85893),a=o(11151);const s={},r="1. Set Allowance for the sell token",i={id:"tutorials/how-to-submit-orders-via-the-api/set-allowance-for-the-sell-token",title:"1. Set Allowance for the sell token",description:"In order for your order to be tradable, the owner account has to allow the GPv2 Vault Relayer  to spend the sell tokens on their behalf (if you are using an existing Balancer v2 approved token or the Balancer Vault's internal balance you may skip this step). You may either set a limited allowance (at least the amount of tokens you intend to sell) or an unlimited allowance (2\\\\256 - 1).\\",source:"@site/docs/tutorials/how-to-submit-orders-via-the-api/1.-set-allowance-for-the-sell-token.md",sourceDirName:"tutorials/how-to-submit-orders-via-the-api",slug:"/tutorials/how-to-submit-orders-via-the-api/set-allowance-for-the-sell-token",permalink:"/docs-v2/docs/tutorials/how-to-submit-orders-via-the-api/set-allowance-for-the-sell-token",draft:!1,unlisted:!1,editUrl:"https://github.com/cowprotocol/docs/tree/main/docs/tutorials/how-to-submit-orders-via-the-api/1.-set-allowance-for-the-sell-token.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{}},l={},c=[];function h(e){const t=Object.assign({h1:"h1",p:"p",a:"a",img:"img",pre:"pre",code:"code"},(0,a.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"1-set-allowance-for-the-sell-token",children:"1. Set Allowance for the sell token"}),"\n",(0,n.jsxs)(t.p,{children:["In order for your order to be tradable, the owner account has to allow the ",(0,n.jsx)(t.a,{href:"https://etherscan.io/address/0xC92E8bdf79f0507f65a392b0ab4667716BFE0110",children:"GPv2 Vault Relayer"}),"  to spend the sell tokens on their behalf (if you are using an existing Balancer v2 approved token or the Balancer Vault's internal balance you may skip this step). You may either set a limited allowance (at least the amount of tokens you intend to sell) or an unlimited allowance (2**256 - 1).\\"]}),"\n",(0,n.jsxs)(t.p,{children:["This can either be done using Etherscan, e.g. to set an unlimited allowance for USDC by visiting ",(0,n.jsx)(t.a,{href:"https://etherscan.io/token/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48#writeProxyContract",children:"https://etherscan.io/token/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48#writeProxyContract"})," and setting\\"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://lh6.googleusercontent.com/IrVJoB93zpZKKuRTuE_-BrzS4aBqLquWXqnLR4xB4UWqiacGHKSLS5S2_q-CEkQmw-1j7HoFY4umrAAEO-D43Fu54MtOBAccEeIDb-zQERSOeUj2lNICtk-d9JYcaBHIaiUN2rzz",alt:""})}),"\n",(0,n.jsx)(t.p,{children:"It can also be done programmatically e.g. using the following ethers typescript snippet:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:'import ERC20 from "@openzeppelin/contracts/build/contracts/ERC20.json";\nimport { Contract, ethers } from "ethers";\n\nconst address = \u201c0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\u201d // USDC\n\nconst erc20 = new Contract(address, ERC20.abi, ethers.provider);\nconst tx = await erc20\n  .connect(\u201cyour address\u201d)\n  .approve(\u201c0xC92E8bdf79f0507f65a392b0ab4667716BFE0110\u201d, ethers.constants.MaxUint256);\nawait tx.wait();\n'})})]})}const d=function(e={}){const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(h,e)})):h(e)}},11151:(e,t,o)=>{o.d(t,{Zo:()=>i,ah:()=>s});var n=o(67294);const a=n.createContext({});function s(e){const t=n.useContext(a);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function i({components:e,children:t,disableParentContext:o}){let i;return i=o?"function"==typeof e?e({}):e||r:s(e),n.createElement(a.Provider,{value:i},t)}}}]);