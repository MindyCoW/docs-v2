"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[762],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>d});var n=r(67294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var i=n.createContext({}),s=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},u=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},p="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,i=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=s(r),m=o,d=p["".concat(i,".").concat(m)]||p[m]||h[m]||a;return r?n.createElement(d,c(c({ref:e},u),{},{components:r})):n.createElement(d,c({ref:e},u))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,c=new Array(a);c[0]=m;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l[p]="string"==typeof t?t:o,c[1]=l;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},59075:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={},c="Allow-list authenticator",l={unversionedId:"smart-contracts/allow-list-authenticator-1/README",id:"smart-contracts/allow-list-authenticator-1/README",title:"Allow-list authenticator",description:"The allow-list authenticator contract determines which addresses are solvers. Before executing any operation which is access-restricted to a solver, the settlement contract queries this contract to determine if the caller is a solver.",source:"@site/docs/smart-contracts/allow-list-authenticator-1/README.md",sourceDirName:"smart-contracts/allow-list-authenticator-1",slug:"/smart-contracts/allow-list-authenticator-1/",permalink:"/docs-v2/docs/smart-contracts/allow-list-authenticator-1/",draft:!1,editUrl:"https://github.com/cowprotocol/docs/tree/main/docs/smart-contracts/allow-list-authenticator-1/README.md",tags:[],version:"current",frontMatter:{}},i={},s=[],u={toc:s},p="wrapper";function h(t){let{components:e,...r}=t;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"allow-list-authenticator"},"Allow-list authenticator"),(0,o.kt)("p",null,"The allow-list authenticator contract determines which addresses are solvers. Before executing any operation which is access-restricted to a solver, the settlement contract queries this contract to determine if the caller is a solver."),(0,o.kt)("p",null,"The allow-list authenticator is the only contract that is deployed as a proxy."),(0,o.kt)("p",null,"Eventually, we plan to deploy a new proxy implementation with the goal of making the choice of who is a solver more decentralized."),(0,o.kt)("p",null,"For example, we might introduce the option of becoming a solver for addresses that are willing to stake some funds as collateral."),(0,o.kt)("p",null,"The smart contract allows a manager to add or remove solvers with an on-chain transaction. The manager can be replaced in a transaction by the proxy owner or itself. Any of these actions emit the corresponding event."))}h.isMDXComponent=!0}}]);