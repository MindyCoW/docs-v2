"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[7673],{26289:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=o(85893),i=o(11151);const s={},c="Introduction",r={id:"solvers/in-depth-solver-specification/introduction",title:"Introduction",description:"The Cow Protocol uses batch auctions (see here for more details) for executing the trades. Within a given batch, the goal is to compute prices and traded amounts in order to maximize a well-defined utility function. This can be formulated as a concrete optimization problem that needs to be solved, and this is where the Solvers comes into place.",source:"@site/docs/solvers/in-depth-solver-specification/introduction.md",sourceDirName:"solvers/in-depth-solver-specification",slug:"/solvers/in-depth-solver-specification/introduction",permalink:"/docs-v2/docs/solvers/in-depth-solver-specification/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/solvers/in-depth-solver-specification/introduction.md",tags:[],version:"current",frontMatter:{}},a={},d=[];function l(e){const t=Object.assign({h1:"h1",p:"p",a:"a",em:"em"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(t.p,{children:["The Cow Protocol uses batch auctions (see ",(0,n.jsx)(t.a,{href:"/docs-v2/docs/overview/batch-auctions",children:"here"})," for more details) for executing the trades. Within a given batch, the goal is to compute prices and traded amounts in order to maximize a well-defined utility function. This can be formulated as a concrete optimization problem that needs to be solved, and this is where the Solvers comes into place."]}),"\n",(0,n.jsxs)(t.p,{children:["Informally, a ",(0,n.jsx)(t.em,{children:"Solver"})," is an algorithm that takes as input a batch auction instance and outputs a batch auction solution, both described precisely in a formal language. The solution is then processed by the ",(0,n.jsx)(t.em,{children:"Driver"}),", another key component of the Cow Protocol infrastructure. The Driver validates all Solver candidate solutions and ranks them according to a well-defined objective function."]})]})}const u=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},11151:(e,t,o)=>{o.d(t,{Zo:()=>r,ah:()=>s});var n=o(67294);const i=n.createContext({});function s(e){const t=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const c={};function r({components:e,children:t,disableParentContext:o}){let r;return r=o?"function"==typeof e?e({}):e||c:s(e),n.createElement(i.Provider,{value:r},t)}}}]);