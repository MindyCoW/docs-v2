"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[1119],{96647:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var o=s(85893),n=s(11151);const r={},a="Querying the Cow Subgraph",i={id:"cow-sdk/querying-the-cow-subgraph",title:"Querying the Cow Subgraph",description:"The Subgraph is constantly indexing the protocol, making all the information more accessible. It provides information about trades, users, tokens and settlements. Additionally, it has some data aggregations which provides insights on the hourly/daily/totals USD volumes, trades, users, etc.",source:"@site/docs/cow-sdk/querying-the-cow-subgraph.md",sourceDirName:"cow-sdk",slug:"/cow-sdk/querying-the-cow-subgraph",permalink:"/docs-v2/docs/cow-sdk/querying-the-cow-subgraph",draft:!1,unlisted:!1,editUrl:"https://github.com/cowprotocol/docs/tree/main/docs/cow-sdk/querying-the-cow-subgraph.md",tags:[],version:"current",frontMatter:{}},c={},u=[];function h(e){const t=Object.assign({h1:"h1",p:"p",a:"a",code:"code",pre:"pre"},(0,n.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"querying-the-cow-subgraph",children:"Querying the Cow Subgraph"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.a,{href:"https://github.com/cowprotocol/subgraph",children:"Subgraph"})," is constantly indexing the protocol, making all the information more accessible. It provides information about trades, users, tokens and settlements. Additionally, it has some data aggregations which provides insights on the hourly/daily/totals USD volumes, trades, users, etc."]}),"\n",(0,o.jsx)(t.p,{children:"The SDK provides just an easy way to access all this information."}),"\n",(0,o.jsxs)(t.p,{children:["You can query the Cow Subgraph either by running some common queries exposed by the ",(0,o.jsx)(t.code,{children:"CowSubgraphApi"})," or by building your own ones:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"import { SubgraphApi, SupportedChainId } from '@cowprotocol/cow-sdk'\n\nconst subgraphApi = new SubgraphApi({ chainId: SupportedChainId.MAINNET })\n\n// Get CoW Protocol totals\nconst { tokens, orders, traders, settlements, volumeUsd, volumeEth, feesUsd, feesEth } =\n  await csubgraphApi.getTotals()\nconsole.log({ tokens, orders, traders, settlements, volumeUsd, volumeEth, feesUsd, feesEth })\n\n// Get last 24 hours volume in usd\nconst { hourlyTotals } = await cowSubgraphApi.getLastHoursVolume(24)\nconsole.log(hourlyTotals)\n\n// Get last week volume in usd\nconst { dailyTotals } = await cowSubgraphApi.getLastDaysVolume(7)\nconsole.log(dailyTotals)\n\n// Get the last 5 batches\nconst query = `\n  query LastBatches($n: Int!) {\n    settlements(orderBy: firstTradeTimestamp, orderDirection: desc, first: $n) {\n      txHash\n      firstTradeTimestamp\n    }\n  }\n`\nconst variables = { n: 5 }\nconst response = await cowSubgraphApi.runQuery(query, variables)\nconsole.log(response)\n"})})]})}const l=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(h,e)})):h(e)}},11151:(e,t,s)=>{s.d(t,{Zo:()=>i,ah:()=>r});var o=s(67294);const n=o.createContext({});function r(e){const t=o.useContext(n);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function i({components:e,children:t,disableParentContext:s}){let i;return i=s?"function"==typeof e?e({}):e||a:r(e),o.createElement(n.Provider,{value:i},t)}}}]);